# -*- coding: utf-8 -*-
"""S8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/anuragal/deep-learning/blob/master/S9/QuizDNN.ipynb
"""

from datetime import datetime
print("Current Date/Time: ", datetime.now())

"""## Model"""

!pip install albumentations==0.4.5

import torch
import torch.nn as nn
import torch.nn.functional as F

!pip install torchsummary
from torchsummary import summary

from models.QuizDNN import QuizDNN

use_cuda = torch.cuda.is_available()
device = torch.device("cuda" if use_cuda else "cpu")
print(device)
model = QuizDNN().to(device)
summary(model, input_size=(3, 32, 32))

"""## Run the Model"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

from dataloader import ImageData
from models.QuizDNN import QuizDNN
from datamodel import DataModel

# Loading data and transforming it
img_data = ImageData()

# Choose from "albumentations" or "pytorch". Default is "pytorch"
img_data.load("albumentations")

# training the dataset and then running test
dm = DataModel(img_data, num_of_epochs = 10, cal_misclassified = True, expected_accuracy = 87)
dm.run_model(QuizDNN(), device)

"""## Plotting Validation Accuracy"""

dm.plot_accuracy_graph()

"""## Plotting Loss Graph"""

dm.plot_loss_graph()

"""## Plotting Misclassified Images"""

dm.plot_misclassified()

dm.plot_GRADcam(["x3_block","x5_block","x7_block","x11_block"])